---
import Tags from "../../components/Tags.astro";
import config from "../../config";
import PostFooter from "../../customization/PostFooter.astro";
import Layout from "../../layouts/Layout.astro";
import { getAllPosts, getPost } from "../../notion";
import { postUrl, formatPostDate } from "../../utils";
import "../../styles/markdown.css";

const { slug } = Astro.params;

export async function getStaticPaths() {
  const posts = await getAllPosts();
  return posts.map((p) => ({ params: { slug: p.slug } })) ?? [];
}

const { database, post, html } = await getPost(slug);
---

<Layout
  title={post.title}
  description={post.excerpt}
  ogImage={postUrl(post.slug + ".webp", Astro.site)}
>
  <main class="py-12 lg:py-20">
    <article class="max-w-5xl mx-auto px-3">
      <header class="mx-auto pb-12 lg:pb-20 max-w-3xl text-center">
        <h1 class:list={["text-5xl mb-6 title", config.post?.titleClasses]}>
          {post.title}
        </h1>
        <p class="text-center">
          {formatPostDate(post.date)}
        </p>
      </header>
      {
        (post.cover || post.featuredImage) && (
          <img
            class="rounded-xl mx-auto aspect-video object-cover"
            style="min-width: 80%;"
            loading="lazy"
            src={post.cover || post.featuredImage}
            alt={post.title}
          />
        )
      }
      <section
        class:list={[
          "max-w-3xl mx-auto py-6 lg:py-12 post",
          config.post?.classes,
        ]}
      >
        <div class="markdown" set:html={html} />
        <Tags tags={post.tags} />
        <PostFooter post={post} database={database} />
      </section>
    </article>
  </main>
</Layout>
<style
  define:vars={{
    titleFontFamily: config.index?.titleFontFamily || "inherit",
    postFfontFamily: config.post?.fontFamily || "inherit",
  }}
>
  .title {
    font-family: var(--titleFontFamily);
  }

  .post {
    font-family: var(--postFfontFamily);
  }
</style>
