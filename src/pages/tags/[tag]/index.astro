---
import Pagination from "../../../components/Pagination.astro";
import PostList from "../../../components/PostList.astro";
import config from "../../../config";
import { downloadImages } from "../../../download";
import Layout from "../../../layouts/Layout.astro";
import client from "../../../notion";
import { paginate } from "../../../utils";

export async function getStaticPaths() {
  const posts = await client.getAllPosts();
  const tags = new Set<string>();
  posts.forEach((post) =>
    post.tags.forEach((tag) => {
      tags.add(tag.name);
    }),
  );

  return Array.from(tags).map((tag) => ({
    params: { tag },
  }));
}

const { tag } = Astro.params;
const [database, posts] = await Promise.all([
  client.getDatabase(),
  client.getAllPosts(),
]);

const filteredPosts = posts.filter((post) =>
  post.tags.some((t) => t.name === tag),
);
const { pageCount, pageInt, pagePosts } = paginate(filteredPosts, "1");
await downloadImages(database?.images, ...filteredPosts.map((p) => p.images));
---

<Layout rssUrl=`/tags/${tag}/rss.xml`>
  <main class="py-12 lg:py-20">
    <article class="max-w-6xl mx-auto px-3">
      <header class="text-center mb-12">
        <h1 class:list={["mb-12 text-6xl title", config.index?.titleClasses]}>
          {database.title}
        </h1>
        <p class="mx-auto max-w-xl">
          {tag}
        </p>
      </header>
      <PostList posts={pagePosts} />
      <Pagination page={pageInt} pageCount={pageCount} base={`/tag/${tag}`} />
    </article>
  </main>
</Layout>
<style
  define:vars={{
    titleFontFamily: config.index?.titleFontFamily || "inherit",
  }}
>
  .title {
    font-family: var(--titleFontFamily);
  }
</style>
