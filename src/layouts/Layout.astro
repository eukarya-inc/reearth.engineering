---
import { PUBLIC_GA_TRACKING_ID } from "../constants";
import client from "../notion";
import { getUrl } from "../utils";
import "prismjs/themes/prism-tomorrow.min.css";
import "katex/dist/katex.min.css";

interface Props {
  title: string;
  description?: string;
  path?: string;
  ogImage?: string;
}

const { title, description = "", path = "/", ogImage = "" } = Astro.props;

const database = await client.getDatabase();
const siteTitle = title ? `${title} - ${database.title}` : database.title;
const siteDescription = description ? description : database.description;
const siteURL = getUrl(path, Astro.site);
const siteOGImage = getUrl("og-image.png", Astro.site);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>{title}</title>
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={database.title} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={ogImage || siteOGImage} />
  </head>
  <body>
    {
      PUBLIC_GA_TRACKING_ID && (
        <>
          <script
            is:inline
            async
            src={`https://www.googletagmanager.com/gtag/js?id=${PUBLIC_GA_TRACKING_ID}`}
          />
          <script is:inline define:vars={{ trackingId: PUBLIC_GA_TRACKING_ID }}>
            window.dataLayer = window.dataLayer || []; function gtag()
            {dataLayer.push(arguments)}
            gtag('js', new Date()); gtag('config', trackingId);
          </script>
        </>
      )
    }
    <slot />
    <script>
      import mermaid from "mermaid";
      mermaid.initialize({
        startOnLoad: true,
        theme: "neutral",
      });
    </script>
  </body>
</html>
<style is:global>
  :root {
    --accent: 136, 58, 234;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgb(var(--accent-light)) 30%,
      white 60%
    );
  }
  html {
    font-family: system-ui, sans-serif;
    background: #13151a;
    background-size: 224px;
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
</style>
